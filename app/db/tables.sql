CREATE TABLE SESSION_INFO (
  user_id INT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
  user_name VARCHAR(255) NOT NULL UNIQUE,
  email VARCHAR(1000) NOT NULL,
  gender INT NOT NULL,
  collect_possible INT NOT NULL,
  for_money INT NOT NULL,
  user_type INT NOT NULL,
  birthyear DATE NOT NULL,
  pas_hash VARCHAR(255) NOT NULL
);



CREATE TABLE TASKS (
  task_id INT NOT NULL PRIMARY KEY GENERATED ALWAYS AS IDENTITY(START WITH 1 INCREMENT BY 1),
  task_link VARCHAR(255),
  task_name VARCHAR (100) NOT NULL,
  frequency DECIMAL(3,2) NOT NULL,
  price DECIMAL(5,3) NOT NULL
);


CREATE TABLE TASK_COMPLETED(
  time_exec TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  user_id INT NOT NULL,
  task_id INT NOT NULL,
  collect INT NOT NULL,
  FOREIGN KEY (user_id)
    REFERENCES SESSION_INFO(user_id)
    ON UPDATE NO ACTION
    ON DELETE CASCADE,
  FOREIGN KEY (task_id)
    REFERENCES TASKS(task_id)
    ON UPDATE NO ACTION
    ON DELETE CASCADE

);

CREATE TABLE TRACKED_TASK (
  time_exec TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
  user_id INT NOT NULL,
  task_id INT NOT NULL,
  FOREIGN KEY (user_id)
    REFERENCES SESSION_INFO(user_id)
    ON UPDATE NO ACTION
    ON DELETE CASCADE,
  FOREIGN KEY (task_id)
    REFERENCES TASKS(task_id)
    ON UPDATE NO ACTION
    ON DELETE CASCADE,
  status INT NOT NULL
);
